https://www.reddit.com/r/voidlinux/comments/k6umiu/how_to_get_qtile_on_voidlinux/


I'm late to the party but for anyone who is also searching for this, I found a way to install it.

It is indeed not in the repos, so you'll have to build it from source. Though when doing this, you'll encounter a few issues. For one, one of the dependencies is not in void's repos (xcffib), the next issue is that cairocffi needs to be installed after xcffib or else it will complain and not work properly.

In order to get around this, you can make a virtualenv and install qtile inside of there, installing xcffib, cairocffi and then eventually qtile from pip in the correct order, so that everything works as intended.

Of course there are more dependencies than just the 2 discussed above, but luckily all the other dependencies are in void's repos and you can install them directly.

To start, you'll need to install these packages:

sudo xbps-install python3 python3-pip python3-setuptools python3-wheel python3-virtualenv-clone python3-dbus python3-gobject pango pango-devel libffi-devel xcb-util-cursor gdk-pixbuf -y

When that's finished, make a virtualenv in your home directory and name it 'qtile':

python3 -m venv --system-site-packages ~/qtile

Don't forget the --system-site-packages flag when you call the above, as it will allow the newly created virtualenv to access python packages installed globally (usually packages installed by xbps)

From here, source into the virtualenv and install the rest of the dependencies, then eventually qtile at the very end:

source ~/qtile/bin/activate
pip install xcffib
pip install --no-cache-dir cairocffi
pip install qtile
# Exit the venv
deactivate

Now if everything worked correctly, you essentially have a qtile installation that is (not fully) isolated from your main python installation. If you want to test it to see if it works, append:

exec ~/qtile/bin/qtile

To the end of your .xinitrc and start up using startx.

If you see a bar at the bottom and it doesn't immediately kick you off, it means qtile is working as expected.

From here, you can leave it how it is (you'll need to use the entire path to use qtile or any of the binaries, unless you add it to your $PATH, which I don't recommend) or you can move it somewhere else and do what I do, the docs make mention of something similar.

I usually move the virtualenv to the /opt directory (it's hardly ever used, and it gets it off my home directory) and symlink the qtile binaries (qtile, qtile-cmd, qtile-run, qtile-top, qshell) to /usr/local/bin or somewhere else defined in $PATH.

If you do that however, you'll need to move the virtualenv with the virtualenv-clone command (installed earlier with xbps) and prepend sudo to it if the directory you're trying to move it to is owned by root (such is the case with /opt). Afterwards, do a recursive chown on the newly created directory, setting the user and group owner to be your normal user account, this is so that you can launch qtile and make changes/explore the virtualenv without having to be root. Don't forget to delete the old virtualenv from your home directory when finished.

To symlink the binaries, just use something like:

sudo ln -s /opt/qtile/bin/{qshell,qtile*} /usr/local/bin

To keep qtile along with the couple dependencies contained in the virtualenv up to date, I like to run a cron job that updates any of them if they are outdated. This is generally on-point with my normal update schedule, which is usually about once a week; this will update the packages (if needed) once a week:

@weekly /bin/sh -c "/opt/qtile/bin/pip list --local --outdated | awk 'NR>2 {print $1}' | xargs -r -n 1 /opt/qtile/bin/pip install --upgrade

Finally, you can go ahead and make the xsession file specified in the docs if you're using a display manager.

I hope this helped, it can be pain to get it setup, but it isn't too bad when you know what to do. There may even be another way to install it that's simpler, though I've seen multiple posts asking about installing qtile on this sub and no real solutions. I really hope a native package comes to the repos at some point.
